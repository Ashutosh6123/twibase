name: Dependency Updates

on:
  schedule:
    - cron: '0 6 * * MON'  # Every Monday at 6 AM UTC
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update requirements
      run: |
        # Create requirements.in if it doesn't exist
        if [ ! -f requirements.in ]; then
          cp requirements.txt requirements.in
        fi
        
        # Update dependencies
        pip-compile --upgrade requirements.in
        
        # Check if there are changes
        if ! git diff --quiet requirements.txt; then
          echo "DEPENDENCIES_UPDATED=true" >> $GITHUB_ENV
        fi

    - name: Create Pull Request
      if: env.DEPENDENCIES_UPDATED == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: Update Python dependencies'
        body: |
          ## ðŸ“¦ Dependency Updates
          
          This PR updates Python dependencies to their latest versions.
          
          ### Changes
          - Updated `requirements.txt` with latest compatible versions
          
          ### Testing
          - [ ] All tests pass
          - [ ] Security scan passes
          - [ ] Docker build succeeds
          
          **Auto-generated by GitHub Actions**
        branch: update-dependencies
        delete-branch: true
        labels: |
          dependencies
          automated-pr

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Run security audit
      run: |
        # Check for known vulnerabilities
        safety check -r requirements.txt --json --output safety-report.json || true
        pip-audit --format=json --output=pip-audit-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          safety-report.json
          pip-audit-report.json

    - name: Create security issue
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Security vulnerability detected',
            body: `## Security Alert
            
            A security vulnerability has been detected in the project dependencies.
            
            Please check the security reports in the latest workflow run:
            ${context.payload.repository.html_url}/actions/runs/${context.runId}
            
            **Action Required:**
            1. Review the security reports
            2. Update vulnerable dependencies
            3. Test the application thoroughly
            4. Deploy security updates
            
            **Auto-generated by GitHub Actions**`,
            labels: ['security', 'high-priority']
          })
